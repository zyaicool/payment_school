{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/announcement/create": {
            "post": {
                "description": "Create a new announcement with details and optional hero image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Announcements"
                ],
                "summary": "Create a New Announcement",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "School ID",
                        "name": "schoolId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title of the announcement",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description of the announcement",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Type of the announcement (e.g., Event, General)",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event Date in YYYY-MM-DD format",
                        "name": "eventDate",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Hero image for the announcement",
                        "name": "heroImage",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Announcement created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/announcement/delete/{id}": {
            "delete": {
                "description": "Delete an announcement by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Announcements"
                ],
                "summary": "Delete an Announcement",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Announcement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Announcement deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Announcement not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to delete announcement",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/announcement/detail/{id}": {
            "get": {
                "description": "Retrieve details of an announcement by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Announcements"
                ],
                "summary": "Get Announcement Detail",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Announcement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Announcement details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid announcement ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve announcement",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/announcement/getList": {
            "get": {
                "description": "Retrieve a paginated list of announcements",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Announcements"
                ],
                "summary": "Get List of Announcements",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search keyword",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field to sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc or desc, default: asc)",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Announcement type filter",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of announcements",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve announcements",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/announcement/type": {
            "get": {
                "description": "Retrieve a list of available announcement types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Announcements"
                ],
                "summary": "Get Announcement Types",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of announcement types",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve announcement types",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/announcement/update/{id}": {
            "put": {
                "description": "Update an existing announcement by its ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Announcements"
                ],
                "summary": "Update an Announcement",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Announcement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title of the announcement",
                        "name": "title",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Description of the announcement",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Type of the announcement (e.g., Event, General)",
                        "name": "type",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Event date in YYYY-MM-DD format",
                        "name": "eventDate",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Hero image for the announcement",
                        "name": "heroImage",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Announcement updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/assets/announcement/{filename}": {
            "get": {
                "description": "Retrieve the announcement image by filename",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "image/jpeg",
                    " image/png"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get Announcement Image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Announcement image filename",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "415": {
                        "description": "Unsupported image format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve or encode image",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/assets/paymentMethod/logo/{filename}": {
            "get": {
                "description": "Retrieve the payment method logo image by filename",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "image/jpeg",
                    " image/png"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get Payment Method Logo Image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment method logo filename",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "415": {
                        "description": "Unsupported image format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve or encode image",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/assets/school/letterhead/{filename}": {
            "get": {
                "description": "Retrieve the school letterhead image by filename",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "image/jpeg",
                    " image/png"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get Letterhead Image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Letterhead image filename",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "415": {
                        "description": "Unsupported image format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve or encode image",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/assets/school/logo/{filename}": {
            "get": {
                "description": "Retrieve the school logo image by filename",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "image/jpeg",
                    " image/png"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get School Logo Image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Logo filename",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "415": {
                        "description": "Unsupported image format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve or encode image",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/assets/user/image/{filename}": {
            "get": {
                "description": "Retrieve the user image by filename",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "image/jpeg",
                    " image/png"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get User Image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User image filename",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "415": {
                        "description": "Unsupported image format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve or encode image",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/auth": {
            "get": {
                "description": "Get Data User After Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Auth User",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DataUserForAuth"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/bankAccount/create": {
            "post": {
                "description": "Create a new bank account for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bank Accounts"
                ],
                "summary": "Create Bank Account",
                "parameters": [
                    {
                        "description": "Bank Account Data",
                        "name": "bankAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BankAccountCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank account created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to create bank account",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/bankAccount/delete/{id}": {
            "delete": {
                "description": "Delete a specific bank account by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bank Accounts"
                ],
                "summary": "Delete Bank Account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bank Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank account deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid bank account ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Bank account not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to delete bank account",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/bankAccount/detail/{id}": {
            "get": {
                "description": "Retrieve details of a specific bank account by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bank Accounts"
                ],
                "summary": "Get Bank Account by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bank Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank account details",
                        "schema": {
                            "$ref": "#/definitions/models.BankAccount"
                        }
                    },
                    "400": {
                        "description": "Invalid bank account ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Bank account not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve bank account",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/bankAccount/getListBankAccount": {
            "get": {
                "description": "Retrieve all bank accounts for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bank Accounts"
                ],
                "summary": "Get All Bank Accounts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of records per page (default: 0)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search keyword",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field to sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc or desc)",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bank accounts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BankAccount"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve bank accounts",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/bankAccount/listBankName": {
            "get": {
                "description": "Retrieve a list of banks from a predefined JSON file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bank Accounts"
                ],
                "summary": "Get Bank Names",
                "responses": {
                    "200": {
                        "description": "List of bank names",
                        "schema": {
                            "$ref": "#/definitions/response.BankResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to load bank names",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/bankAccount/update/{id}": {
            "put": {
                "description": "Update an existing bank account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bank Accounts"
                ],
                "summary": "Update Bank Account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bank Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Bank Account Data",
                        "name": "bankAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BankAccountCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank account updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Account number already exists",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to update bank account",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billing/billingStatus": {
            "get": {
                "description": "Retrieve all billing data with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing"
                ],
                "summary": "Get All Billings",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Billing type",
                        "name": "billingType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Payment type",
                        "name": "paymentType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "School grade",
                        "name": "schoolGrade",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Bank account ID",
                        "name": "bankAccountId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc/desc)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field to sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order of sorting (asc/desc)",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter for donations",
                        "name": "isDonation",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BillingStatus"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billing/create": {
            "post": {
                "description": "Create a new billing entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing"
                ],
                "summary": "Create a New Billing",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Billing creation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BillingCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Billing"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billing/createDonation": {
            "post": {
                "description": "Create a donation billing entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing"
                ],
                "summary": "Create Donation",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Donation creation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BillingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billing/delete/{id}": {
            "delete": {
                "description": "Delete a billing entry by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing"
                ],
                "summary": "Delete Billing",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Billing ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Billing"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billing/detail/{id}": {
            "get": {
                "description": "Retrieve billing data by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing"
                ],
                "summary": "Get Billing By ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Billing ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BillingDetailResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billing/getAllBilling": {
            "get": {
                "description": "Retrieve all billing data with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing"
                ],
                "summary": "Get All Billings",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Billing type",
                        "name": "billingType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Payment type",
                        "name": "paymentType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "School grade",
                        "name": "schoolGrade",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Bank account ID",
                        "name": "bankAccountId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc/desc)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field to sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order of sorting (asc/desc)",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter for donations",
                        "name": "isDonation",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BillingListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billing/getBillingByStudentID": {
            "get": {
                "description": "Retrieve billing information for a specific student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing"
                ],
                "summary": "Get Billing By Student ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "School Year ID",
                        "name": "schoolYearId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "School Grade ID",
                        "name": "schoolGradeId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "School Class ID",
                        "name": "schoolClassId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BillingByStudentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billing/update/{id}": {
            "put": {
                "description": "Update an existing billing entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing"
                ],
                "summary": "Update Billing",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Billing ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Billing update payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BillingUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Billing"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billingHistory/detailBillingHistory": {
            "get": {
                "description": "Retrieve detailed billing history for a specific transaction ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing History"
                ],
                "summary": "Get Billing History Details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "transactionId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Billing history details",
                        "schema": {
                            "$ref": "#/definitions/response.DetailBillingHistory"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billingHistory/getAllBillingHistory": {
            "get": {
                "description": "Retrieve all billing history based on various filters and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing History"
                ],
                "summary": "Get All Billing History",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of records per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search keyword",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Student ID filter",
                        "name": "studentId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Payment status code filter",
                        "name": "paymentStatusCode",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "School year ID filter",
                        "name": "schoolYearId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Payment type ID filter",
                        "name": "paymentTypeId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "User ID filter",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field to sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc or desc)",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of billing history records",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.ListBillingHistory"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve billing history",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billingHistory/printInvoice": {
            "get": {
                "description": "Generate a PDF invoice for a given invoice number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/pdf"
                ],
                "tags": [
                    "Billing History"
                ],
                "summary": "Generate Invoice PDF",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invoice number",
                        "name": "invoiceNumber",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PDF file generated successfully",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "500": {
                        "description": "Failed to generate invoice",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billingReport/exportExcel": {
            "get": {
                "description": "Export billing reports to an Excel file based on specified filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                ],
                "tags": [
                    "Billing Reports"
                ],
                "summary": "Export Billing Report to Excel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "School grade ID filter",
                        "name": "schoolGradeId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "School class ID filter",
                        "name": "schoolClassId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Payment status ID filter",
                        "name": "paymentStatusId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "School year ID filter",
                        "name": "schoolYearId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Bank account ID filter",
                        "name": "bankAccountId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Billing type filter",
                        "name": "billingType",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Student ID filter",
                        "name": "studentId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Excel file containing the exported billing report",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to export billing report",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billingReport/getList": {
            "get": {
                "description": "Retrieve a list of billing reports based on various filters and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing Reports"
                ],
                "summary": "Get Billing Reports",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of records per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field to sort by (e.g., created_at)",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc or desc, default: ASC)",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "School grade ID filter",
                        "name": "schoolGradeId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "School class ID filter",
                        "name": "schoolClassId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Payment status ID filter",
                        "name": "paymentStatusId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "School year ID filter",
                        "name": "schoolYearId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Bank account ID filter",
                        "name": "bankAccountId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Billing type filter",
                        "name": "billingType",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Student ID filter",
                        "name": "studentId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated billing report data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to get billing reports",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billingStudent/create": {
            "post": {
                "description": "Create a new billing student record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing Students"
                ],
                "summary": "Create Billing Student",
                "parameters": [
                    {
                        "description": "Billing student creation request",
                        "name": "createRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateBillingStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created billing student details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billingStudent/delete/{id}": {
            "delete": {
                "description": "Delete a billing student record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing Students"
                ],
                "summary": "Delete Billing Student",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Billing Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete confirmation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID or deletion error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billingStudent/detailBillingByBillingStudentId/{id}": {
            "get": {
                "description": "Retrieve detailed billing student data by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing Students"
                ],
                "summary": "Get Detailed Billing Student",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Billing Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Billing student details",
                        "schema": {
                            "$ref": "#/definitions/response.BillingStudentDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billingStudent/detailBillingStudent": {
            "get": {
                "description": "Retrieve detailed billing information by student ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing Students"
                ],
                "summary": "Get Billing Detail by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detailed billing information",
                        "schema": {
                            "$ref": "#/definitions/models.BillingDetail"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billingStudent/getAllBillingStudent": {
            "get": {
                "description": "Retrieve a paginated and filtered list of billing students",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing Students"
                ],
                "summary": "Get All Billing Students",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of records per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search query for billing students",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by student ID",
                        "name": "studentId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by school class ID",
                        "name": "schoolClassId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by payment type",
                        "name": "paymentType",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by school grade ID",
                        "name": "schoolGradeId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by school ID",
                        "name": "schoolId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field to sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc or desc, default: asc)",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of billing students",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BillingStudent"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/billingStudent/update/{id}": {
            "put": {
                "description": "Update billing student data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Billing Students"
                ],
                "summary": "Update Billing Student",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Billing Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Billing student update request",
                        "name": "updateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateBillingStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated billing student data",
                        "schema": {
                            "$ref": "#/definitions/models.BillingStudent"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/city": {
            "get": {
                "description": "Retrieve city data filtered by Province ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cities"
                ],
                "summary": "Get Cities by Province ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Province ID",
                        "name": "provinceId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of cities",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/dashboard/admin": {
            "get": {
                "description": "Retrieve dashboard data for an admin user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get Dashboard Data for Admin",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dashboard data for admin",
                        "schema": {
                            "$ref": "#/definitions/response.DashboardAdminResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/dashboard/parent": {
            "get": {
                "description": "Retrieve dashboard data for a parent user, optionally filtered by student ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get Dashboard Data for Parent",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dashboard data for parent",
                        "schema": {
                            "$ref": "#/definitions/response.DashboardResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/invoiceFormat/create": {
            "post": {
                "description": "Create a new invoice format for a school",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoice Format"
                ],
                "summary": "Create Invoice Format",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create Invoice Format Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateInvoiceFormatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice format created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.InvoiceFormat"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/invoiceFormat/detail": {
            "get": {
                "description": "Retrieve an invoice format by its associated school ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoice Format"
                ],
                "summary": "Get Invoice Format by School ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "School ID",
                        "name": "schoolId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice format data",
                        "schema": {
                            "$ref": "#/definitions/response.InvoiceFormatResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid school ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "description": "Authenticate a user and retrieve a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Firebase token, only for mobile apps",
                        "name": "firebaseToken",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "School ID, defaults to 0 if not provided",
                        "name": "schoolId",
                        "in": "header"
                    },
                    {
                        "description": "Login request body",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input or request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/masterPaymentGateway/create": {
            "post": {
                "description": "Add a new payment method with optional logo upload",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment Method"
                ],
                "summary": "Create Payment Method",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Payment Method Name",
                        "name": "paymentMethod",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bank Code",
                        "name": "bankCode",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bank Name",
                        "name": "bankName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Administrative Fee",
                        "name": "adminFee",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Is Percentage (true/false)",
                        "name": "isPercentage",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Administrative Fee Percentage",
                        "name": "adminFeePercentage",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Logo for the Payment Method",
                        "name": "methodLogo",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data saved successfully",
                        "schema": {
                            "$ref": "#/definitions/models.PaymentMethod"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/masterPaymentGateway/detail/{id}": {
            "get": {
                "description": "Retrieve detailed information of a payment method by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment Method"
                ],
                "summary": "Get Payment Method Detail",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Payment Method ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment method details",
                        "schema": {
                            "$ref": "#/definitions/response.PaymentMethodResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/masterPaymentGateway/getAllConfig": {
            "get": {
                "description": "Retrieve a list of all payment methods with optional search functionality",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment Method"
                ],
                "summary": "Get All Payment Methods",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search term for payment method",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of payment methods",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.PaymentMethodResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/masterPaymentGateway/update/{id}": {
            "put": {
                "description": "Update an existing payment method with optional logo upload",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment Method"
                ],
                "summary": "Update Payment Method",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Payment Method ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Payment Method Name",
                        "name": "paymentMethod",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bank Code",
                        "name": "bankCode",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bank Name",
                        "name": "bankName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Administrative Fee",
                        "name": "adminFee",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Is Percentage (true/false)",
                        "name": "isPercentage",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Administrative Fee Percentage",
                        "name": "adminFeePercentage",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Logo for the Payment Method",
                        "name": "methodLogo",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment method updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.PaymentMethod"
                        }
                    },
                    "400": {
                        "description": "Invalid input or ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/paymentReport/exportExcel": {
            "get": {
                "description": "Generate an Excel file of payment reports based on various filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                ],
                "tags": [
                    "Payment Report"
                ],
                "summary": "Export Payment Report to Excel",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Filter by payment type ID",
                        "name": "paymentTypeId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by user ID",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by student ID",
                        "name": "studentId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by payment status",
                        "name": "paymentStatus",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by school grade ID",
                        "name": "schoolGradeId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by school class ID",
                        "name": "schoolClassId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start date filter in yyyy-MM-dd format",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date filter in yyyy-MM-dd format",
                        "name": "endDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Excel file with payment report data",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid input or date range",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/paymentReport/getList": {
            "get": {
                "description": "Retrieve a paginated list of payment reports based on various filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment Report"
                ],
                "summary": "Get Payment Report",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field to sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "asc",
                        "description": "Sort order (asc/desc)",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by payment type ID",
                        "name": "paymentTypeId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by user ID",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by student ID",
                        "name": "studentId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by payment status",
                        "name": "paymentStatus",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by school grade ID",
                        "name": "schoolGradeId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by school class ID",
                        "name": "schoolClassId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start date filter in yyyy-MM-dd format",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date filter in yyyy-MM-dd format",
                        "name": "endDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated payment report data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input or date range",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/paymentStatus": {
            "get": {
                "description": "Retrieve a list of available payment statuses from a JSON data source",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Get List of Payment Statuses",
                "responses": {
                    "200": {
                        "description": "List of payment statuses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.PaymentType"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve payment statuses",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/paymentType": {
            "get": {
                "description": "Retrieve a list of available payment types from a JSON data source",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment Type"
                ],
                "summary": "List Payment Types",
                "responses": {
                    "200": {
                        "description": "List of payment types",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.PaymentType"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve payment types",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/prefixClass/create": {
            "post": {
                "description": "Create a new prefix class with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PrefixClass"
                ],
                "summary": "Create a Prefix Class",
                "parameters": [
                    {
                        "description": "Prefix Class Data",
                        "name": "prefixClass",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PrefixClassCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Prefix class created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.PrefixClass"
                        }
                    },
                    "400": {
                        "description": "Validation error or missing fields",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to create prefix class",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/prefixClass/getListPrefixClass": {
            "get": {
                "description": "Retrieve a list of prefix classes filtered by search criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PrefixClass"
                ],
                "summary": "Get Prefix Class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search filter for prefix classes",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of prefix classes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.PrefixCLassResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve prefix classes",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/province": {
            "get": {
                "description": "Retrieve a list of provinces from the provided data file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Province"
                ],
                "summary": "Get Provinces Data",
                "responses": {
                    "200": {
                        "description": "List of provinces",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve provinces data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/role/detail/{id}": {
            "get": {
                "description": "Get Data Role By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get Data Role By Id",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Role"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/role/getAllRole": {
            "get": {
                "description": "Retrieve all roles with pagination and search functionality",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get All Roles",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search keyword",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Role"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schedule/checkFailedTransaction": {
            "get": {
                "description": "Retrieves billing transactions that have failed payments based on the schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "summary": "Check for Payment Failures Using Schedule",
                "responses": {
                    "200": {
                        "description": "List of billing transactions with payment failure",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve billing transactions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schedule/sendDummyNotif": {
            "post": {
                "description": "Sends a dummy notification for testing purposes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "summary": "Send a Dummy Notification",
                "parameters": [
                    {
                        "description": "Notification details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DummyNotifRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to send notification",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/school/create": {
            "post": {
                "description": "Create a new school with all required fields and optional logo and letterhead files",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schools"
                ],
                "summary": "Create a New School",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "NPSN",
                        "name": "npsn",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "School Name",
                        "name": "schoolName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "School Province",
                        "name": "schoolProvince",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "School City",
                        "name": "schoolCity",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "School Phone",
                        "name": "schoolPhone",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "School Address",
                        "name": "schoolAddress",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "School Mail",
                        "name": "schoolMail",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "School Fax",
                        "name": "schoolFax",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "School Grade ID",
                        "name": "schoolGradeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "School Logo",
                        "name": "schoolLogo",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "School Letterhead",
                        "name": "schoolLetterhead",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.School"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/school/delete/{id}": {
            "delete": {
                "description": "Delete a school by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schools"
                ],
                "summary": "Delete School by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "School ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.School"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/school/detail/{id}": {
            "get": {
                "description": "Get details of a school by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schools"
                ],
                "summary": "Get School Data by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "School ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DetailSchoolResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/school/getAllOnboarding": {
            "get": {
                "description": "Get a list of all onboarding schools with a search option",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schools"
                ],
                "summary": "Get All Onboarding Schools",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/response.SchoolOnBoardingResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/school/getAllSchool": {
            "get": {
                "description": "Get a list of all schools with pagination, search, and sorting options",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schools"
                ],
                "summary": "Get All Schools",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "asc",
                        "description": "Sort order",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.SchoolListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/school/update/{id}": {
            "put": {
                "description": "Update an existing school's information by its ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schools"
                ],
                "summary": "Update School Data by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "School ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "NPSN",
                        "name": "npsn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "School Name",
                        "name": "schoolName",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "School Province",
                        "name": "schoolProvince",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "School City",
                        "name": "schoolCity",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "School Phone",
                        "name": "schoolPhone",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "School Address",
                        "name": "schoolAddress",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "School Mail",
                        "name": "schoolMail",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "School Fax",
                        "name": "schoolFax",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "School Grade ID",
                        "name": "schoolGradeId",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "School Logo",
                        "name": "schoolLogo",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "School Letterhead",
                        "name": "schoolLetterhead",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.School"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schoolClass/create": {
            "post": {
                "description": "Creates a new school class with provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SchoolClass"
                ],
                "summary": "Create a New School Class",
                "parameters": [
                    {
                        "description": "School class details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SchoolClassCreateUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message and created school class data",
                        "schema": {
                            "$ref": "#/definitions/models.SchoolClass"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to create school class",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schoolClass/delete/{id}": {
            "delete": {
                "description": "Deletes a specific school class by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SchoolClass"
                ],
                "summary": "Delete a School Class",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "School Class ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message indicating successful deletion",
                        "schema": {
                            "$ref": "#/definitions/models.SchoolClass"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to delete school class",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schoolClass/detail/{id}": {
            "get": {
                "description": "Retrieves a specific school class by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SchoolClass"
                ],
                "summary": "Get School Class by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "School Class ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "School class data",
                        "schema": {
                            "$ref": "#/definitions/response.SchoolClassDetailResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schoolClass/getAllSchoolClass": {
            "get": {
                "description": "Retrieves a list of school classes with pagination, sorting, and search options",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SchoolClass"
                ],
                "summary": "Get All School Classes",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Limit of records per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort field",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "asc",
                        "description": "Sort order",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Show deleted data",
                        "name": "showDeletedData",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of school classes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.SchoolClassListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schoolClass/update/{id}": {
            "put": {
                "description": "Updates an existing school class with provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SchoolClass"
                ],
                "summary": "Update a School Class",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "School Class ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated school class details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SchoolClassCreateUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message and updated school class data",
                        "schema": {
                            "$ref": "#/definitions/models.SchoolClass"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to update school class",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schoolGrade/create": {
            "post": {
                "description": "Creates a new school grade with provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SchoolGrade"
                ],
                "summary": "Create a New School Grade",
                "parameters": [
                    {
                        "description": "School grade details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SchoolGradeCreateUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message and created school grade data",
                        "schema": {
                            "$ref": "#/definitions/models.SchoolGrade"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to create school grade",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schoolGrade/delete/{id}": {
            "delete": {
                "description": "Deletes a specific school grade by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SchoolGrade"
                ],
                "summary": "Delete a School Grade",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "School Grade ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message indicating successful deletion",
                        "schema": {
                            "$ref": "#/definitions/models.SchoolGrade"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to delete school grade",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schoolGrade/detail/{id}": {
            "get": {
                "description": "Retrieves a specific school grade by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SchoolGrade"
                ],
                "summary": "Get School Grade by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "School Grade ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "School grade data",
                        "schema": {
                            "$ref": "#/definitions/models.SchoolGrade"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schoolGrade/getAllSchoolGrade": {
            "get": {
                "description": "Retrieves a list of school grades with pagination and search options",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SchoolGrade"
                ],
                "summary": "Get All School Grades",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Limit of records per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of school grades",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.SchoolGradeListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schoolGrade/update/{id}": {
            "put": {
                "description": "Updates an existing school grade with provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SchoolGrade"
                ],
                "summary": "Update a School Grade",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "School Grade ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated school grade details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SchoolGradeCreateUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message and updated school grade data",
                        "schema": {
                            "$ref": "#/definitions/models.SchoolGrade"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to update school grade",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schoolMajor/create": {
            "post": {
                "description": "Creates a new school major with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SchoolMajor"
                ],
                "summary": "Create a New School Major",
                "parameters": [
                    {
                        "description": "School major details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SchoolMajorCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message and created school major data",
                        "schema": {
                            "$ref": "#/definitions/models.SchoolMajor"
                        }
                    },
                    "400": {
                        "description": "Bad request - Missing required fields",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to create school major",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schoolMajor/getListSchoolMajor": {
            "get": {
                "description": "Retrieves a list of school majors with optional search filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SchoolMajor"
                ],
                "summary": "Get All School Majors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search term for school major",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of school majors",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.SchoolMajorResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schoolYear/create": {
            "post": {
                "description": "Creates a new school year with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SchoolYear"
                ],
                "summary": "Create a New School Year",
                "parameters": [
                    {
                        "description": "School year details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SchoolYearCreateUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message and created school year data",
                        "schema": {
                            "$ref": "#/definitions/models.SchoolYear"
                        }
                    },
                    "400": {
                        "description": "Bad request - Missing required fields",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to create school year",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schoolYear/delete/{id}": {
            "delete": {
                "description": "Deletes a school year by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SchoolYear"
                ],
                "summary": "Delete a School Year",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "School Year ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message indicating successful deletion",
                        "schema": {
                            "$ref": "#/definitions/models.SchoolYear"
                        }
                    },
                    "500": {
                        "description": "Failed to delete school year",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schoolYear/detail/{id}": {
            "get": {
                "description": "Retrieves a school year by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SchoolYear"
                ],
                "summary": "Get School Year by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "School Year ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "School year data",
                        "schema": {
                            "$ref": "#/definitions/response.SchoolYearDetailResponse"
                        }
                    },
                    "404": {
                        "description": "School year not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schoolYear/getAllSchoolYear": {
            "get": {
                "description": "Retrieves a paginated list of school years with optional search, sorting, and filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SchoolYear"
                ],
                "summary": "Get All School Years",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of records per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term for school year",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "Sort by field",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"asc\"",
                        "description": "Sort order",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of school years",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.SchoolYearListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schoolYear/update/{id}": {
            "put": {
                "description": "Updates an existing school year with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SchoolYear"
                ],
                "summary": "Update a School Year",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "School Year ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated school year details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SchoolYearCreateUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message and updated school year data",
                        "schema": {
                            "$ref": "#/definitions/models.SchoolYear"
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to update school year",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/student/create": {
            "post": {
                "description": "Create a new student record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Create New Student",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Student data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Student"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/student/delete/{id}": {
            "delete": {
                "description": "Delete a student record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Delete Student",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/student/detail/{id}": {
            "get": {
                "description": "Retrieve student details by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Get Student By ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DetailStudentResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/student/exportExcel": {
            "get": {
                "description": "Export student data to an Excel file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Export Students to Excel",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by NIS",
                        "name": "searchNis",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Grade ID",
                        "name": "gradeId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Year ID",
                        "name": "yearId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Student status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "School ID",
                        "name": "schoolId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exported Excel file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/student/getAllStudent": {
            "get": {
                "description": "Retrieve a list of all students with various filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Get All Students",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of records per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by NIS",
                        "name": "searchNis",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Student status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Grade ID",
                        "name": "gradeId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Year ID",
                        "name": "yearId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "School ID",
                        "name": "schoolId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "classId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.StudentListResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/student/getFileExcel": {
            "get": {
                "description": "Download an Excel file template for students",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Download Excel Format for Students",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Excel file template",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/student/update/{id}": {
            "put": {
                "description": "Update an existing student's data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Update Student Data",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated student data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Student"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/student/upload": {
            "post": {
                "description": "Upload student data from a CSV or Excel file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Upload Students",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "file",
                        "description": "Student data file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/student/user/{user_id}": {
            "get": {
                "description": "Retrieve a student by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Get Student By User ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Student"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/transaction/create": {
            "post": {
                "description": "Create a new transaction for a student with the provided payment method.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Create New Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create Transaction Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/transaction/donation": {
            "post": {
                "description": "Process a payment donation for a student.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Make Payment Donation",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create Transaction Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/transaction/midtrans/checkPayment": {
            "get": {
                "description": "Check the payment status of a Midtrans transaction by order ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Check Midtrans Payment Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Midtrans Order ID",
                        "name": "orderId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/transaction/midtrans/payment": {
            "post": {
                "description": "Process a payment using Midtrans payment gateway.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Make Midtrans Payment",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create Transaction Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/user/changePassword": {
            "post": {
                "description": "Change user password using the provided token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Change Password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "New Password",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/user/checkEmaill": {
            "get": {
                "description": "Check if the provided email is available or already taken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Check if Email is Already Taken",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/user/checkUsername": {
            "get": {
                "description": "Check if the provided username is available or already taken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Check if Username is Already Taken",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/user/create": {
            "post": {
                "description": "Create a new user after checking access and parsing the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "User Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/user/delete/{id}": {
            "delete": {
                "description": "Delete a user with the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/user/detail/{id}": {
            "get": {
                "description": "Get detailed information about a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get User Data By ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DetailUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/user/edit/{id}": {
            "put": {
                "description": "Update an existing user with the given data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user data",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated User Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/user/generateTokenChangePassword": {
            "get": {
                "description": "Generate a token for changing password via email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Generate Token for Change Password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/user/getByEmail": {
            "get": {
                "description": "Get detailed information about a user by their email address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get User Data By Email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address of the user",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/user/getFileExcel": {
            "get": {
                "description": "Generate and download an Excel file for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Download Excel Format for User",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Excel file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/user/resendVerificationEmail/{id}": {
            "post": {
                "description": "Resend Email Verification to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Resend Email Verification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/user/updatePassword/{id}": {
            "put": {
                "description": "Change the user's password without using a token, using the current password and new password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Change User Password without Token",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Password Change Request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdatePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/user/upload": {
            "post": {
                "description": "Upload users via CSV or Excel file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Upload Users via File",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/user/uploadFoto": {
            "post": {
                "description": "Upload a new profile photo for the user",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Upload User Photo",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "file",
                        "description": "Profile Image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/user/verifyEmail": {
            "get": {
                "description": "Verify the user's email address by using a token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Verify email using token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token for email verification",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/user/verifyTokenChangePassword": {
            "get": {
                "description": "Verify the token for change password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Verify Token for Change Password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Change Password Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/users/getAllUser": {
            "get": {
                "description": "Get a list of users with optional filters for role, pagination, and status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get All Users",
                "parameters": [
                    {
                        "type": "string",
                        "format": "\"Bearer token\"",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of role IDs",
                        "name": "roleId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "School ID",
                        "name": "schoolId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Sort field",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status filter",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.UserListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/webhook": {
            "post": {
                "description": "Handle incoming webhook from the payment gateway for transaction status updates.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Handle Payment Webhook",
                "parameters": [
                    {
                        "description": "Webhook Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebhookPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.BankAccount": {
            "type": "object",
            "properties": {
                "accountName": {
                    "type": "string"
                },
                "accountNumber": {
                    "type": "string"
                },
                "accountOwner": {
                    "type": "string"
                },
                "bankName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "school": {
                    "$ref": "#/definitions/models.School"
                },
                "schoolId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                }
            }
        },
        "models.Billing": {
            "type": "object",
            "properties": {
                "bankAccount": {
                    "$ref": "#/definitions/models.BankAccount"
                },
                "bankAccountId": {
                    "type": "integer"
                },
                "billingAmount": {
                    "type": "integer"
                },
                "billingCode": {
                    "type": "string"
                },
                "billingName": {
                    "type": "string"
                },
                "billingNumber": {
                    "type": "string"
                },
                "billingTypeId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isDonation": {
                    "type": "boolean"
                },
                "schoolClassIds": {
                    "type": "string"
                },
                "schoolGrade": {
                    "$ref": "#/definitions/models.SchoolGrade"
                },
                "schoolGradeId": {
                    "type": "integer"
                },
                "schoolYear": {
                    "$ref": "#/definitions/models.SchoolYear"
                },
                "schoolYearId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                }
            }
        },
        "models.BillingDetail": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "billingId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "detailBillingName": {
                    "type": "string"
                },
                "dueDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                }
            }
        },
        "models.BillingStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.BillingStudent": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "billingDetailId": {
                    "type": "integer"
                },
                "billingId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "detailBillingName": {
                    "type": "string"
                },
                "dueDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "paymentStatus": {
                    "type": "string"
                },
                "studentId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                }
            }
        },
        "models.InvoiceFormat": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "format": {
                    "type": "string"
                },
                "generatedInvoiceFormat": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "prefix": {
                    "type": "string"
                },
                "school": {
                    "$ref": "#/definitions/models.School"
                },
                "schoolId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                }
            }
        },
        "models.PaymentMethod": {
            "type": "object",
            "properties": {
                "adminFee": {
                    "type": "integer"
                },
                "adminFeePercentage": {
                    "type": "string"
                },
                "bankCode": {
                    "type": "string"
                },
                "bankName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "isPercentage": {
                    "type": "boolean"
                },
                "methodLogo": {
                    "type": "string"
                },
                "paymentMethod": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                }
            }
        },
        "models.PrefixClass": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "prefixName": {
                    "type": "string"
                },
                "schoolID": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                }
            }
        },
        "models.Role": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "roleMatrix": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RoleMatrix"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                }
            }
        },
        "models.RoleMatrix": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "isCreate": {
                    "type": "boolean"
                },
                "isDelete": {
                    "type": "boolean"
                },
                "isRead": {
                    "type": "boolean"
                },
                "isUpdate": {
                    "type": "boolean"
                },
                "pageCode": {
                    "type": "string"
                },
                "pageName": {
                    "type": "string"
                },
                "roleId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                }
            }
        },
        "models.School": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "id": {
                    "description": "Primary key field (ID)",
                    "type": "integer"
                },
                "npsn": {
                    "type": "integer"
                },
                "schoolAddress": {
                    "type": "string"
                },
                "schoolCity": {
                    "type": "string"
                },
                "schoolCode": {
                    "type": "string"
                },
                "schoolFax": {
                    "type": "string"
                },
                "schoolGradeId": {
                    "type": "integer"
                },
                "schoolGrades": {
                    "$ref": "#/definitions/models.SchoolGrade"
                },
                "schoolLetterhead": {
                    "type": "string"
                },
                "schoolLogo": {
                    "type": "string"
                },
                "schoolMail": {
                    "type": "string"
                },
                "schoolName": {
                    "type": "string"
                },
                "schoolPhone": {
                    "type": "string"
                },
                "schoolProvince": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                },
                "userSchools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserSchool"
                    }
                }
            }
        },
        "models.SchoolClass": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "prefixClassId": {
                    "type": "integer"
                },
                "school": {
                    "$ref": "#/definitions/models.School"
                },
                "schoolClassCode": {
                    "type": "string"
                },
                "schoolClassName": {
                    "type": "string"
                },
                "schoolGrade": {
                    "$ref": "#/definitions/models.SchoolGrade"
                },
                "schoolGradeId": {
                    "type": "integer"
                },
                "schoolId": {
                    "type": "integer"
                },
                "schoolMajorId": {
                    "type": "integer"
                },
                "suffix": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                }
            }
        },
        "models.SchoolGrade": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "schoolClass": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SchoolClass"
                    }
                },
                "schoolGradeCode": {
                    "type": "string"
                },
                "schoolGradeName": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                }
            }
        },
        "models.SchoolMajor": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "schoolID": {
                    "type": "integer"
                },
                "schoolMajorName": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                }
            }
        },
        "models.SchoolYear": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "schoolId": {
                    "type": "integer"
                },
                "schoolYearCode": {
                    "type": "string"
                },
                "schoolYearName": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                }
            }
        },
        "models.Student": {
            "type": "object",
            "required": [
                "address",
                "birthDate",
                "birthPlace",
                "citizenship",
                "distanceToSchool",
                "fullName",
                "gender",
                "noHandphone",
                "religion",
                "schoolGrade",
                "status",
                "yearId"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "birthDate": {
                    "type": "string"
                },
                "birthPlace": {
                    "type": "string"
                },
                "citizenship": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "distanceToSchool": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "height": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "medicalHistory": {
                    "type": "string"
                },
                "nickName": {
                    "type": "string"
                },
                "nik": {
                    "type": "string"
                },
                "nis": {
                    "type": "string"
                },
                "nisn": {
                    "type": "string"
                },
                "noHandphone": {
                    "type": "string"
                },
                "registrationNumber": {
                    "type": "string"
                },
                "religion": {
                    "type": "string"
                },
                "schoolClass": {
                    "type": "string"
                },
                "schoolClassId": {
                    "type": "integer"
                },
                "schoolGrade": {
                    "type": "string"
                },
                "schoolGradeId": {
                    "type": "integer"
                },
                "schoolYearId": {
                    "type": "integer"
                },
                "sibling": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                },
                "userStudents": {
                    "$ref": "#/definitions/models.UserStudent"
                },
                "weight": {
                    "type": "string"
                },
                "yearId": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "isBlock": {
                    "description": "Set default to false",
                    "type": "boolean"
                },
                "isVerification": {
                    "description": "Set default to false",
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/models.Role"
                },
                "roleId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                },
                "userSchool": {
                    "$ref": "#/definitions/models.UserSchool"
                },
                "userStudents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserStudent"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserSchool": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "school": {
                    "$ref": "#/definitions/models.School"
                },
                "schoolId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.UserStudent": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "student": {
                    "$ref": "#/definitions/models.Student"
                },
                "studentId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "request.BankAccountCreateRequest": {
            "type": "object",
            "properties": {
                "accountName": {
                    "type": "string"
                },
                "accountNumber": {
                    "type": "string"
                },
                "accountOwner": {
                    "type": "string"
                },
                "bankName": {
                    "type": "string"
                },
                "schoolId": {
                    "type": "integer"
                }
            }
        },
        "request.BillingCreateRequest": {
            "type": "object",
            "properties": {
                "bankAccountId": {
                    "type": "integer"
                },
                "billingAmount": {
                    "type": "integer"
                },
                "billingCode": {
                    "type": "string"
                },
                "billingName": {
                    "type": "string"
                },
                "billingType": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "detailBillings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.DetailBillings"
                    }
                },
                "schoolClassIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "schoolGradeId": {
                    "type": "integer"
                },
                "schoolYearId": {
                    "type": "integer"
                }
            }
        },
        "request.BillingUpdateRequest": {
            "type": "object",
            "properties": {
                "billingAmount": {
                    "type": "integer"
                },
                "billingName": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "endDate": {
                    "type": "string"
                },
                "paymentType": {
                    "type": "string"
                },
                "ppn": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                },
                "tenor": {
                    "type": "string"
                }
            }
        },
        "request.ChangePasswordRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "request.CreateBillingStudentRequest": {
            "type": "object",
            "properties": {
                "detailDataBilling": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.DetailDataBillingRequest"
                    }
                },
                "studentId": {
                    "type": "integer"
                }
            }
        },
        "request.CreateInvoiceFormatRequest": {
            "type": "object",
            "required": [
                "format",
                "prefix",
                "schoolId"
            ],
            "properties": {
                "format": {
                    "type": "string"
                },
                "generatedInvoiceFormat": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "schoolId": {
                    "type": "integer"
                }
            }
        },
        "request.CreateStudentRequest": {
            "type": "object",
            "required": [
                "address",
                "birthDate",
                "birthPlace",
                "citizenship",
                "distanceToSchool",
                "fullName",
                "gender",
                "noHandphone",
                "religion"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "birthDate": {
                    "type": "string"
                },
                "birthPlace": {
                    "type": "string"
                },
                "citizenship": {
                    "type": "string"
                },
                "distanceToSchool": {
                    "type": "integer"
                },
                "emailParent": {
                    "type": "string"
                },
                "entryYear": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "height": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "medicalHistory": {
                    "type": "string"
                },
                "nickName": {
                    "type": "string"
                },
                "nik": {
                    "type": "string"
                },
                "nis": {
                    "type": "string"
                },
                "nisn": {
                    "type": "string"
                },
                "noHandphone": {
                    "type": "string"
                },
                "registrationNumber": {
                    "type": "string"
                },
                "religion": {
                    "type": "string"
                },
                "schoolClassId": {
                    "type": "integer"
                },
                "schoolGradeId": {
                    "type": "integer"
                },
                "schoolId": {
                    "type": "integer"
                },
                "schoolYearId": {
                    "type": "integer"
                },
                "sibling": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "weight": {
                    "type": "string"
                }
            }
        },
        "request.CreateTransactionRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "amountToPay": {
                    "type": "integer"
                },
                "billingId": {
                    "type": "integer"
                },
                "billingStudentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "changeAmount": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "discountType": {
                    "type": "string"
                },
                "paymentMethodId": {
                    "type": "integer"
                },
                "studentId": {
                    "type": "integer"
                },
                "totalBilling": {
                    "type": "integer"
                }
            }
        },
        "request.DetailBillings": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "detailBillingName": {
                    "type": "string"
                },
                "dueDate": {
                    "type": "string"
                }
            }
        },
        "request.DetailDataBillingRequest": {
            "type": "object",
            "properties": {
                "billingDetailIds": {
                    "type": "string"
                },
                "billingId": {
                    "type": "integer"
                }
            }
        },
        "request.DummyNotifRequest": {
            "type": "object",
            "properties": {
                "announcementId": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "nis": {
                    "type": "string"
                },
                "notificationType": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                },
                "studentName": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "transactionId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.PrefixClassCreate": {
            "type": "object",
            "properties": {
                "prefixName": {
                    "type": "string"
                },
                "schoolId": {
                    "type": "integer"
                }
            }
        },
        "request.SchoolClassCreateUpdateRequest": {
            "type": "object",
            "properties": {
                "prefixClassId": {
                    "type": "integer"
                },
                "schoolClassName": {
                    "type": "string"
                },
                "schoolGradeId": {
                    "type": "integer"
                },
                "schoolId": {
                    "type": "integer"
                },
                "schoolMajorId": {
                    "type": "integer"
                },
                "suffix": {
                    "type": "string"
                }
            }
        },
        "request.SchoolGradeCreateUpdateRequest": {
            "type": "object",
            "properties": {
                "schoolGradeName": {
                    "type": "string"
                }
            }
        },
        "request.SchoolMajorCreate": {
            "type": "object",
            "properties": {
                "schoolId": {
                    "type": "integer"
                },
                "schoolMajorName": {
                    "type": "string"
                }
            }
        },
        "request.SchoolYearCreateUpdateRequest": {
            "type": "object",
            "properties": {
                "endDate": {
                    "description": "Same as abo",
                    "type": "string"
                },
                "schoolId": {
                    "type": "integer"
                },
                "schoolYearName": {
                    "type": "string"
                },
                "startDate": {
                    "description": "Use string or time.Time depending on your parsing preference",
                    "type": "string"
                }
            }
        },
        "request.UpdateBillingStudentRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "detailBillingName": {
                    "type": "string"
                },
                "dueDate": {
                    "type": "string"
                }
            }
        },
        "request.UpdatePasswordRequest": {
            "type": "object",
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                }
            }
        },
        "request.UpdateStudentRequest": {
            "type": "object",
            "required": [
                "address",
                "birthDate",
                "birthPlace",
                "citizenship",
                "distanceToSchool",
                "fullName",
                "gender",
                "noHandphone",
                "religion"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "birthDate": {
                    "type": "string"
                },
                "birthPlace": {
                    "type": "string"
                },
                "citizenship": {
                    "type": "string"
                },
                "distanceToSchool": {
                    "type": "integer"
                },
                "emailParent": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "height": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "medicalHistory": {
                    "type": "string"
                },
                "nickName": {
                    "type": "string"
                },
                "nik": {
                    "type": "string"
                },
                "nis": {
                    "type": "string"
                },
                "nisn": {
                    "type": "string"
                },
                "noHandphone": {
                    "type": "string"
                },
                "religion": {
                    "type": "string"
                },
                "schoolClassId": {
                    "type": "integer"
                },
                "schoolGradeId": {
                    "type": "integer"
                },
                "schoolYearId": {
                    "type": "integer"
                },
                "sibling": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "weight": {
                    "type": "string"
                }
            }
        },
        "request.UserCreateRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "roleId": {
                    "type": "integer"
                },
                "schoolId": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.UserUpdateRequest": {
            "type": "object",
            "properties": {
                "roleId": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.VANumber": {
            "type": "object",
            "properties": {
                "bank": {
                    "type": "string"
                },
                "va_number": {
                    "type": "string"
                }
            }
        },
        "request.WebhookPayload": {
            "type": "object",
            "properties": {
                "bill_key": {
                    "type": "string"
                },
                "biller_code": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "expiry_time": {
                    "type": "string"
                },
                "fraud_status": {
                    "type": "string"
                },
                "gross_amount": {
                    "type": "string"
                },
                "merchant_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "payment_amounts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "payment_type": {
                    "type": "string"
                },
                "permata_va_number": {
                    "type": "string"
                },
                "settlement_time": {
                    "description": "Pointer to make it optional",
                    "type": "string"
                },
                "signature_key": {
                    "type": "string"
                },
                "status_code": {
                    "type": "string"
                },
                "status_message": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                },
                "transaction_status": {
                    "type": "string"
                },
                "transaction_time": {
                    "type": "string"
                },
                "va_numbers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.VANumber"
                    }
                }
            }
        },
        "response.BankData": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "bankName": {
                    "type": "string"
                },
                "codeBank": {
                    "type": "string"
                }
            }
        },
        "response.BankResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.BankData"
                    }
                }
            }
        },
        "response.BillingByStudentResponse": {
            "type": "object",
            "properties": {
                "billingExist": {
                    "type": "boolean"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.BillingStudentData"
                    }
                }
            }
        },
        "response.BillingDetailResponse": {
            "type": "object",
            "properties": {
                "bankAccountName": {
                    "description": "Bank account associated with the billing",
                    "type": "string"
                },
                "billingCode": {
                    "description": "Code of the billing",
                    "type": "string"
                },
                "billingName": {
                    "description": "Name of the billing",
                    "type": "string"
                },
                "billingType": {
                    "description": "Type of the billing",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the billing",
                    "type": "string"
                },
                "detailBillings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DetailBilling"
                    }
                },
                "id": {
                    "description": "ID of the billing",
                    "type": "integer"
                },
                "schoolClassList": {
                    "description": "List of school classes (if applicable)",
                    "type": "string"
                },
                "schoolYear": {
                    "description": "Name of the school year",
                    "type": "string"
                }
            }
        },
        "response.BillingListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.BillingResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "totalData": {
                    "type": "integer"
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "response.BillingResponse": {
            "type": "object",
            "properties": {
                "bankAccountName": {
                    "type": "string"
                },
                "billingName": {
                    "type": "string"
                },
                "billingNumber": {
                    "type": "string"
                },
                "billingType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "schoolGradeName": {
                    "type": "string"
                }
            }
        },
        "response.BillingStudentData": {
            "type": "object",
            "properties": {
                "billingId": {
                    "type": "integer"
                },
                "billingName": {
                    "type": "string"
                },
                "billingStudents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.BillingStudentDetailData"
                    }
                }
            }
        },
        "response.BillingStudentDetailData": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "billingDetailId": {
                    "type": "integer"
                },
                "billingDetailName": {
                    "type": "string"
                },
                "isExist": {
                    "type": "boolean"
                }
            }
        },
        "response.BillingStudentDetailResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "billingStudentId": {
                    "type": "integer"
                },
                "detailBillingName": {
                    "type": "string"
                },
                "dueDate": {
                    "type": "string"
                }
            }
        },
        "response.BillingStudentForHistory": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "billingType": {
                    "type": "string"
                },
                "detailBillingName": {
                    "type": "string"
                },
                "dueDate": {
                    "type": "string"
                }
            }
        },
        "response.DashboardAdminResponse": {
            "type": "object",
            "properties": {
                "activeStudent": {
                    "type": "integer"
                },
                "totalBilling": {
                    "type": "integer"
                },
                "totalTransaction": {
                    "type": "integer"
                }
            }
        },
        "response.DashboardResponse": {
            "type": "object",
            "properties": {
                "dataDashboard": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DetailDashboardResponse"
                    }
                }
            }
        },
        "response.DataListBillingHistory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "invoiceNumber": {
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "paymentDate": {
                    "type": "string"
                },
                "paymentMethod": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                },
                "studentName": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "totalAmount": {
                    "type": "integer"
                },
                "transactionStatus": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.DataUserForAuth": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/response.DetailRole"
                },
                "schoolData": {
                    "$ref": "#/definitions/response.DetailSchoolResponse"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.DetailBilling": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "detailBillingName": {
                    "type": "string"
                },
                "dueDate": {
                    "type": "string"
                },
                "id": {
                    "description": "Add ID field",
                    "type": "integer"
                }
            }
        },
        "response.DetailBillingHistory": {
            "type": "object",
            "properties": {
                "adminFee": {
                    "type": "integer"
                },
                "changeAmount": {
                    "type": "integer"
                },
                "discountAmount": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "invoiceNumber": {
                    "type": "string"
                },
                "listBilling": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.BillingStudentForHistory"
                    }
                },
                "paymentDate": {
                    "type": "string"
                },
                "paymentMethod": {
                    "type": "string"
                },
                "schoolClass": {
                    "type": "string"
                },
                "studentName": {
                    "type": "string"
                },
                "totalBillingAmount": {
                    "type": "integer"
                },
                "totalBillingBeforeDiscount": {
                    "type": "integer"
                },
                "totalPayAmount": {
                    "type": "integer"
                },
                "transactionStatus": {
                    "type": "string"
                }
            }
        },
        "response.DetailDashboardResponse": {
            "type": "object",
            "properties": {
                "detailDataStudent": {
                    "$ref": "#/definitions/response.StudentResponse"
                },
                "donationName": {
                    "type": "string"
                },
                "listLatestBilling": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ListLatestBillingResponse"
                    }
                }
            }
        },
        "response.DetailPrefixResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "prefixName": {
                    "type": "string"
                }
            }
        },
        "response.DetailRole": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "roleMatrix": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DetailRoleMatrix"
                    }
                },
                "roleName": {
                    "type": "string"
                }
            }
        },
        "response.DetailRoleMatrix": {
            "type": "object",
            "properties": {
                "isCreate": {
                    "type": "boolean"
                },
                "isDelete": {
                    "type": "boolean"
                },
                "isRead": {
                    "type": "boolean"
                },
                "isUpdate": {
                    "type": "boolean"
                },
                "pageCode": {
                    "type": "string"
                },
                "pageName": {
                    "type": "string"
                }
            }
        },
        "response.DetailSchoolMajorResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "schoolMajorName": {
                    "type": "string"
                }
            }
        },
        "response.DetailSchoolResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "npsn": {
                    "type": "integer"
                },
                "schoolAddress": {
                    "type": "string"
                },
                "schoolCity": {
                    "type": "string"
                },
                "schoolCode": {
                    "type": "string"
                },
                "schoolFax": {
                    "type": "string"
                },
                "schoolGradeId": {
                    "type": "integer"
                },
                "schoolGradeName": {
                    "type": "string"
                },
                "schoolLetterhead": {
                    "type": "string"
                },
                "schoolLogo": {
                    "type": "string"
                },
                "schoolMail": {
                    "type": "string"
                },
                "schoolName": {
                    "type": "string"
                },
                "schoolPhone": {
                    "type": "string"
                },
                "schoolProvince": {
                    "type": "string"
                }
            }
        },
        "response.DetailSchoolYearResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "schoolYearName": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "response.DetailStudentResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "birthDate": {
                    "type": "string"
                },
                "birthPlace": {
                    "type": "string"
                },
                "citizenship": {
                    "type": "string"
                },
                "distanceToSchool": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "height": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "medicalHistory": {
                    "type": "string"
                },
                "nickName": {
                    "type": "string"
                },
                "nik": {
                    "type": "string"
                },
                "nis": {
                    "type": "string"
                },
                "nisn": {
                    "type": "string"
                },
                "noHandphone": {
                    "type": "string"
                },
                "placeholder": {
                    "type": "string"
                },
                "registrationNumber": {
                    "type": "string"
                },
                "religion": {
                    "type": "string"
                },
                "schoolClass": {
                    "type": "string"
                },
                "schoolClassId": {
                    "type": "integer"
                },
                "schoolGrade": {
                    "type": "string"
                },
                "schoolGradeId": {
                    "type": "integer"
                },
                "schoolId": {
                    "type": "integer"
                },
                "schoolName": {
                    "type": "string"
                },
                "schoolYearId": {
                    "type": "integer"
                },
                "schoolYearName": {
                    "type": "string"
                },
                "sibling": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "weight": {
                    "type": "string"
                },
                "yearId": {
                    "type": "string"
                }
            }
        },
        "response.DetailUserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "roleId": {
                    "type": "integer"
                },
                "roleName": {
                    "type": "string"
                },
                "schoolId": {
                    "type": "integer"
                },
                "schoolName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "verificationEmail": {
                    "type": "boolean"
                }
            }
        },
        "response.InvoiceFormatResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "format": {
                    "type": "string"
                },
                "generatedInvoiceFormat": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "prefix": {
                    "type": "string"
                },
                "schoolId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                }
            }
        },
        "response.ListBillingHistory": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DataListBillingHistory"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "totalData": {
                    "type": "integer"
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "response.ListDataUserForIndex": {
            "type": "object",
            "properties": {
                "createdDate": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "roleId": {
                    "type": "integer"
                },
                "roleName": {
                    "type": "string"
                },
                "schoolId": {
                    "type": "integer"
                },
                "schoolName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "verificationEmail": {
                    "type": "boolean"
                }
            }
        },
        "response.ListLatestBillingResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "billingName": {
                    "type": "string"
                },
                "dueDate": {
                    "description": "Use string if you want formatted date, otherwise `time.Time`",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "studentName": {
                    "type": "string"
                }
            }
        },
        "response.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "response.PaymentMethodResponse": {
            "type": "object",
            "properties": {
                "adminFee": {
                    "type": "integer"
                },
                "adminFeePercentage": {
                    "type": "string"
                },
                "bankCode": {
                    "type": "string"
                },
                "bankName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isPercentage": {
                    "type": "boolean"
                },
                "methodLogo": {
                    "type": "string"
                },
                "paymentMethod": {
                    "type": "string"
                }
            }
        },
        "response.PaymentType": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.PrefixCLassResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DetailPrefixResponse"
                    }
                }
            }
        },
        "response.SchoolClassDetailResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "prefix_class_id": {
                    "type": "integer"
                },
                "school_class_name": {
                    "type": "string"
                },
                "school_grade_id": {
                    "type": "integer"
                },
                "school_major_id": {
                    "type": "integer"
                },
                "suffix": {
                    "type": "string"
                }
            }
        },
        "response.SchoolClassListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SchoolClassResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "totalData": {
                    "type": "integer"
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "response.SchoolClassResponse": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isEdit": {
                    "type": "boolean"
                },
                "placeholder": {
                    "type": "string"
                },
                "prefixClass": {
                    "type": "string"
                },
                "schoolClassName": {
                    "type": "string"
                },
                "schoolMajor": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "response.SchoolGradeListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SchoolGrade"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "response.SchoolListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SchoolResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "totalData": {
                    "type": "integer"
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "response.SchoolMajorResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DetailSchoolMajorResponse"
                    }
                }
            }
        },
        "response.SchoolOnBoardingResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "npsn": {
                    "type": "integer"
                },
                "schoolLogo": {
                    "type": "string"
                },
                "schoolName": {
                    "type": "string"
                }
            }
        },
        "response.SchoolResponse": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "npsn": {
                    "type": "integer"
                },
                "schoolName": {
                    "type": "string"
                },
                "schoolPhone": {
                    "type": "string"
                },
                "schoolProvince": {
                    "type": "string"
                }
            }
        },
        "response.SchoolYearDetailResponse": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "schoolYearName": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "response.SchoolYearListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DetailSchoolYearResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "totalData": {
                    "type": "integer"
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "response.StudentListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DetailStudentResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "totalData": {
                    "type": "integer"
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "response.StudentResponse": {
            "type": "object",
            "properties": {
                "fullName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nis": {
                    "type": "string"
                },
                "schoolClass": {
                    "type": "string"
                },
                "schoolName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.UserListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ListDataUserForIndex"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "totalData": {
                    "type": "integer"
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        }
    }
}